buildscript {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
        mavenCentral()
        google()
		jcenter()
    }
    dependencies {
         classpath 'com.android.tools.build:gradle:4.1.0'
    }
}

allprojects {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
        mavenCentral()
        maven { url "https://repo1.maven.org/maven2/" }
        google()
        jcenter()
        flatDir {
            dirs '../libs'
        }
    }
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 19
        versionName "7.5.0"

        consumerProguardFiles 'proguard-rules.pro'
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions{
        abortOnError false
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'com.edmodo:cropper:2.0.0'
    implementation(name: 'FoxitRDK', ext: 'aar')
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:2.2.16"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    implementation 'org.bouncycastle:bcpkix-jdk15to18:1.66'
    implementation 'org.bouncycastle:bcprov-jdk15to18:1.66'
}

task clearAar(type: Delete){
    delete '../FoxitRDKUIExtensions.aar'
}

task makeAar(type: Exec){
    dependsOn(clearAar,build)
    def fromFile = 'build/outputs/aar/'
    def intoFile = '../'
    if(org.gradle.internal.os.OperatingSystem.current().windows) {
        commandLine "cmd",
                '-/C', 'copy', file("$fromFile/uiextensions_src-release.aar").absolutePath, file("$intoFile/FoxitRDKUIExtensions.aar")
    }else {
        commandLine "cp",
                file("$fromFile/uiextensions_src-release.aar").absolutePath, file("$intoFile/FoxitRDKUIExtensions.aar")
    }
}
makeAar {}.dependsOn(clearAar, build)


